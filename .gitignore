# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.mcp
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# AI/ML Models and cached data
models/
*.pkl
*.pth
*.safetensors
*.ckpt
*.bin

# Pipeline-specific ignores
# Test output directories (ignore ALL test output)
*_TEST/
*_test/
test_*/
*_output/
*_pipeline/
pipeline_output/
better_pipeline_output/
ROUTE_A_*/
STEP0_*/
ENHANCED_*/
COMPLETE_*/
FINAL_*/
REAL_*/
BULLETPROOF_*/
COLORFUL_*/
GRABCUT_*/
final_test*/
blue_jacket_*/

# Test images (keep a few examples)
test_*.jpg
test_*.png
real_*.jpg
production_*.jpg
actual_*.jpg
colorful_*.jpg
blue_jacket_*.jpg
jacket_*.jpg
better_*.jpg

# Temporary processing files
*.tmp
temp/
tmp/

# Log files
logs/
*.log

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Generated documentation
site/

# MCP auth files (should be handled by the MCP system itself)
.mcp-auth/

# Ignore all test directories but keep the main test structure
/test_*/
!/tests/

# Keep main source structure but ignore generated content
!/src/
!/config/
!/docs/
!/examples/
!/scripts/
!/mcp_server/

# Keep important documentation and configuration
!README.md
!LICENSE
!pyproject.toml
!*.md
!mcp_config.json
!setup_mcp.py

# But ignore sensitive environment files
.env*
!.env.example
